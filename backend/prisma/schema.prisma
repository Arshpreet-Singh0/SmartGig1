// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  name           String
  password       String
  role           Role      @default(FREELANCER)
  profilePicture String?
  bio            String?
  skills         String[]
  rating         Float     @default(0.0) // Default rating is 0.0
  ratingCount    Int       @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt

  //relations
  projects  Project[]
  proposals Proposal[]
}

enum Role {
  FREELANCER
  CLIENT
}

model Project {
  id             Int           @id @default(autoincrement())
  title          String
  description    String
  budget         Float
  duration       String
  skillsRequired String[]
  status         ProjectStatus @default(OPEN)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  userId         Int

  //realtions
  User User @relation(fields: [userId], references: [id])

  Proposal Proposal[]
}

enum ProjectStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
  CLOSED
}

model Proposal {
  id               Int            @id @default(autoincrement())
  coverLetter      String
  proposedBudget   Float
  proposedTimeline String
  status           ProposalStatus @default(SUBMITTED)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  // Relations
  project      Project @relation(fields: [projectId], references: [id])
  projectId    Int
  freelancer   User    @relation(fields: [freelancerId], references: [id])
  freelancerId Int
}

enum ProposalStatus {
  SUBMITTED
  ACCEPTED
  REJECTED
}
